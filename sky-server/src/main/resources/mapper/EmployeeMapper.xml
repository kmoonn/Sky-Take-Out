<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="fun.kmoon.mapper.EmployeeMapper">

    <sql id="common">
        select id,
               name,
               username,
               password,
               phone,
               sex,
               id_number,
               status,
               create_time,
               update_time,
               create_user,
               update_user
        from employee
    </sql>

    <select id="list" resultType="Employee">
        <include refid="common" />
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="getById" resultType="fun.kmoon.entity.Employee" parameterType="long">
        <include refid="common" />
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="fun.kmoon.dto.EmployeeDTO">
        INSERT INTO employee (name, username, password, phone, sex, id_number, create_time, update_time, create_user, update_user)
        VALUES (#{name}, #{username}, #{password}, #{phone}, #{sex}, #{idNumber}, NOW(), #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <update id="update">
        UPDATE employee
        SET
            name = #{employeeDTO.name},
            username = #{employeeDTO.username},
            password = #{employeeDTO.password},
            phone = #{employeeDTO.phone},
            sex = #{employeeDTO.sex},
            id_number = #{employeeDTO.idNumber},
            status = #{employeeDTO.status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM employee WHERE id = #{id}
    </delete>
</mapper>

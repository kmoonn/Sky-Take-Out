<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="fun.kmoon.mapper.EmployeeMapper">

    <sql id="common">
        select employee_id,
               name,
               username,
               password,
               phone,
               sex,
               id_number,
               status,
               create_time,
               update_time,
               create_user,
               update_user
        from employee
    </sql>

    <resultMap id="baseResultMap" type="Employee">
        <id column="employee_id" property="employeeId"/>
        <result column="name" property="name"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="phone" property="phone"/>
        <result column="sex" property="sex"/>
        <result column="id_number" property="idNumber"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_user" property="updateUser"/>
    </resultMap>

    <select id="list" resultType="Employee">
        <include refid="common" />
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="idNumber!= null and idNumber!= ''">
                AND id_number LIKE CONCAT('%', #{idNumber}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="select" resultMap="baseResultMap">
        <include refid="common" />
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="idNumber!= null and idNumber!= ''">
                AND id_number LIKE CONCAT('%', #{idNumber}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="getById" resultMap="baseResultMap" parameterType="long">
        <include refid="common" />
        WHERE employee_id = #{employeeId}
    </select>

    <insert id="insert" parameterType="Employee">
        INSERT INTO employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name!= null and name!= ''">
                name,
            </if>
            <if test="username!= null and username!= ''">
                username,
            </if>
            <if test="password!= null and password!= ''">
                password,
            </if>
            <if test="phone!= null and phone!= ''">
                phone,
            </if>
            <if test="sex!= null">
                sex,
            </if>
            <if test="idNumber!= null and idNumber!= ''">
                id_number,
            </if>
            <if test="status!= null">
                status,
            </if>
            create_time,
            create_user
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name!= null and name!= ''">
                #{name},
            </if>
            <if test="username!= null and username!= ''">
                #{username},
            </if>
            <if test="password!= null and password!= ''">
                #{password},
            </if>
            <if test="phone!= null and phone!= ''">
                #{phone},
            </if>
            <if test="sex!= null">
                #{sex},
            </if>
            <if test="idNumber!= null and idNumber!= ''">
                #{idNumber},
            </if>
            <if test="status!= null">
                #{status},
            </if>
            NOW(),
            #{createUser}
        </trim>
    </insert>

    <update id="update">
        UPDATE employee
        <set>
            <if test="employee.name!= null and employee.name!= ''">
                name = #{employee.name},
            </if>
            <if test="employee.username!= null and employee.username!= ''">
                username = #{employee.username},
            </if>
            <if test="employee.password!= null and employee.password!= ''">
                password = #{employee.password},
            </if>
            <if test="employee.phone!= null and employee.phone!= ''">
                phone = #{employee.phone},
            </if>
            <if test="employee.sex!= null">
                sex = #{employee.sex},
            </if>
            <if test="employee.idNumber!= null and employee.idNumber!= ''">
                id_number = #{employee.idNumber},
            </if>
            <if test="employee.status!= null and employee.status!= ''">
                status = #{employee.status},
            </if>
            update_time = NOW(),
            <if test="employee.updateUser!= null and employee.updateUser!= ''">
                update_user = #{employee.updateUser}
            </if>
        </set>
        <where>
            employee_id = #{employeeId}
        </where>
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM employee WHERE employee_id = #{employeeId}
    </delete>
</mapper>
